Апстракција, индексери - задаци
===============================

.. questionnote::

    **1. Змијица са индексером**

    Написати класу ``Zmijica`` поштујући следећу спецификацију. 
    
    Објекат класе ``Zmijica`` представља змијицу из познате игре на првим мобилним телефонима. 
    Змијица се састоји од једног или више чланака, а креће по целобројној решетки у равни. 
    Змијица је описана листом поља која покрива, односно координатама својих чланака (сваки чланак 
    се налази на једном пољу, узастопни чланци се налазе на суседним пољима, поље је описано паром 
    целобројних координата). Један од чланака је глава змијице. 
    
    Конструктор има два целобројна параметра, координате полазног положаја. Подразумева се да је 
    дужина змијице на почетку једнака 1.

    Класа има следеће јавне методе и својства:

    - Својство ``Count`` (само за читање), које даје дужину змијице,
    - Метод ``Gore``, који имплементира померање главе навише, док остали чланци прате главу,
    - Метод ``Dole``, који имплементира померање главе наниже, док остали чланци прате главу,
    - Метод ``Levo``, који имплементира померање главе налево, док остали чланци прате главу,
    - Метод ``Desno``, који имплементира померање главе надесно, док остали чланци прате главу,
    - Метод ``Rasti``, који имплементира продужавање змијице. Метод има један целобројни 
      параметар, који може да се изостави (подразумевана вредност је један). Змијица не расте 
      приликом позива овог метода, већ за по један чланак у следећих ``n`` померања, где је ``n`` 
      параметар метода ``Rasti``. Због тога ће, након позива овог метода, реп змијице остати 
      непомичан приликом наредних ``n`` померања.
    - Метод ``ToString``, који враћа текстуалну репрезентацију змијице. На пример, змијица са 
      главом на пољу ``(1, 5)`` и осталим чланцима на пољима ``(1, 4)``, ``(2, 4)`` редом, 
      приказује се као ``[(1, 5)(1, 4)(2, 4)]``.

    Класа има и индексер (само за читање), који враћа резултат типа ``Tuple<int, int>``. У овој 
    торки, први елемент је :math:`x`, а други :math:`y` координата чланка који одговара наведеном 
    индексу (0 одговара глави, 1 првом следећем чланку итд.).
    
    Класу треба написати тако да може да се изврши следећи кôд.

    .. activecode:: klasa_zmijica_test
        :passivecode: true
        :includesrc: src/zadaci/41a_zmijica_indekser/zmijica_indekser_test.cs
        
    Извршавањем кода треба да се добије следећи резултат:
    
    .. code::
    
        [(3, 3)]
        [(3, 4)]
        [(2, 4)]
        [(1, 4)(2, 4)]
        [(1, 5)(1, 4)(2, 4)]
        [(0, 5)(1, 5)(1, 4)(2, 4)]
        [(0, 6)(0, 5)(1, 5)(1, 4)]
        [(1, 6)(0, 6)(0, 5)(1, 5)]
        Upotreba indeksera
        Clanak 0: x=1, y=6
        Clanak 1: x=0, y=6
        Clanak 2: x=0, y=5
        Clanak 3: x=1, y=5

.. reveal:: zmijica_savet
    :showtitle: Упутство
    :hidetitle: Сакриј упутство

    **Упутство:** 
    
    Померање змијице може једноставније да се реализује ако се уведе приватни метод ``Pomak``, јер се 
    онда јавни методи ``Gore``, ``Dole``, ``Levo``, ``Desno`` своде на један позив метода ``Pomak``:

    .. code::

        private void Pomak(int dx, int dy) { ... }
        public void Gore() { Pomak(0, 1); }
        public void Dole() { Pomak(0, -1); }
        public void Levo() { Pomak(-1, 0); }
        public void Desno() { Pomak(1, 0); }

    Сам метод ``Pomak`` може да се имплеменира на различите начине, а ми ћемо овде описати два. У оба 
    случаја, чланци змијице се памте у листи парова целих бројева, где сваки елемент листе садржи 
    :math:`x` и :math:`y` координату једног чланка.

    .. code::

        private List<Tuple<int, int>> polja;

    У једноставнијој имплементацији чланци змије у сваком тренутку одговарају редом елементима 
    листе. То значи да ``polja[0]`` представља главу, ``polja[1]`` следећи чланак итд. Овај 
    приступ подразумева да се при померању змије убаци нови елемент на почетак листе, а да се 
    избаци елемент са краја листе (уколико змијица не расте при том померању).

    У нешто сложенијој, али и ефикаснијој имплементацији, глава може да се нађе на било ком месту 
    у листи, а на наредним местима се редом налазе следећи чланци (после последњег елемента листе, 
    змијица се наставља нултим елементом, све до елемента који предтходи глави). Због тога се у 
    овој имплементацији поред листе ``polja`` памти и индекс главе. Тиме је омогућено ефикасније 
    ажурирање положаја змијице када она не расте при померању (довољно је на место репа уписати 
    главу и ажурирати индекс главе). 

.. comment

    Могућа решења

    .. reveal:: zmijica_predlog_resenja1
        :showtitle: Могуће (једноставније) решење за класу
        :hidetitle: Сакриј решење

        **Прво (једноставније) решење за класу**
        
        .. activecode:: klasa_zmijica1
            :passivecode: true
            :includesrc: src/zadaci/41a_zmijica_indekser/resenje_a_zmijica_indekser.cs

    .. reveal:: zmijica_predlog_resenja2
        :showtitle: Могуће (ефикасније) решење за класу
        :hidetitle: Сакриј решење

        **Друго (ефикасније) решење за класу**
        
        .. activecode:: klasa_zmijica2
            :passivecode: true
            :includesrc: src/zadaci/41a_zmijica_indekser/resenje_b_zmijica_indekser.cs
