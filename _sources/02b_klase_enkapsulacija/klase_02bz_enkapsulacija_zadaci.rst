Енкапсулација - задаци
======================

.. questionnote::

    **1. Температура**

    Написати класу ``Temperatura`` поштујући следећу спецификацију. 
    
    Класа има само једно приватно поље реалног типа, у коме памти температуру изражену у степенима Целзијуса. 
    
    Конструктор има један реалан параметар, а то је температура у степенима Целзијуса. 

    Класа има три својства реалног типа, која могу да се корсите и за читање и за писање:

    - Својство ``C`` за температуру изражену у степенима Целзијуса,
    - Својство ``K`` за температуру изражену у степенима Келвина,
    - Својство ``F`` за температуру изражену у степенима Фаренхајта.
    
    |
    
    Искористите написану класу да прикажете табелу са вредностима температуре у степенима Целзијуса
    од -50 до +70 са кораком 5, уз одговарајуће вредности у степенима Фаренхајта.
   
.. reveal:: temperatura_predlog_resenja
    :showtitle: Могуће решење за класу
    :hidetitle: Сакриј решење

    **Могуће решење за класу:**
    
    .. activecode:: klasa_temperatura
        :passivecode: true
        :includesrc: src/zadaci/11_temperatura.cs
        
    
    
.. questionnote::

    **2. Време**
    
    Написати класу ``Vreme`` поштујући следећу спецификацију. 
    
    Класа има само једно целобројно поље, у коме памти број секунди протеклих од поноћи 
    (најчешће последње). 
    
    Конструктор има три целобројна параметра, а то су број сати, минута и секунди. Од ових 
    параметара, последњи или последња два могу да се изоставе, а тада се за њих подразумева 
    вредност 0.

    Класа има и својства ``Total``, ``D``, ``H``, ``M``, ``S``, помоћу којих се редом добија 
    укупан број секунди (цео неозначен број), број протеклих дана (цео неозначен број), сати 
    (0+23), минута (0-59) и секунди (0-59). Сва својства се користе само за читање.
    
    Написати и метод ``ToString``, који враћа запис времена у формату ``HH:MM:SS``. У 
    случају да је протекао цео дан или више, формат је ``HH:MM:SS+D``, где ``D`` представља 
    број протеклих дана.
    
    |
    
    Искористите написану класу да решите задатак `Чекање <https://petlja.org/biblioteka/r/Zbirka/cekanje>`_
    из Петљине онлајн збирке.
    

.. reveal:: vreme_predlog_resenja
    :showtitle: Могуће решење за класу
    :hidetitle: Сакриј решење

    **Могуће решење за класу:**
    
    .. activecode:: klasa_vreme
        :passivecode: true
        :includesrc: src/zadaci/12_vreme.cs
        

    **Напомена:** Писањем речи ``override`` у декларацији метода ``ToString`` постижемо да 
    за објекат ``t`` типа ``Vreme`` не морамо да пишемо 
            
    .. code-block:: csharp
    
        Console.WriteLine(t.ToString());
            
    већ је довољно 

    .. code-block:: csharp
    
        Console.WriteLine(t);
    
    О речи ``override`` и њеном значењу ће бити више речи у другом делу овог курса. 


.. comment

    .. questionnote::

        **3. Очитавање**
        
        Написати класу ``Ocitavanje`` поштујући следећу спецификацију. 
        
        Класа има реална поља географску ширину и дужину и поља за објекте типа ``Temperatura`` и ``Vreme`` 
        (искористити класе из претходних задатака). 
        
        Конструктор има укупно шест параметара. Прва три параметра су реална (за географску ширину, 
        географску дужину и температуру), а следећа три целобројна (за број сати, минута и секунди). 
        Од ових параметара, последњи или последња два могу да се изоставе, а тада се за њих подразумева 
        вредност 0.

        Класа има својства за читање вредности географске ширине и дужине, као и сва својства која 
        имају класе ``Temperatura`` и ``Vreme`` (такође само за читање).
        
        *** TODO метод ``ToString()``.
        
        |
        
        ?(тешко) Искористите написану класу да решите следећи задатак. Учитати број :math:`N`, а затим податке 
        о :math:`N` очитавања. Формирати низ или листу објеката типа ``Ocitavanje``, сортирати податке по времену 
        и за сваки тренутак за који има података исписати локацију максималне температуре у том тренутку.

.. questionnote::

    **3. Лифт**
    
    Написати класу ``Lift`` поштујући следећу спецификацију. 

    Класа има целобројна поља (неозначени цели бројеви) ``nosivost``, ``masaULiftu``, ``sprat`` 
    и реално поље ``rad``. Поље ``rad`` садржи информацију о укупном извршеном раду лифта при 
    превозу људи, односно терета, од почетка рада.

    Конструктор има само један целобројни (``uint``) параметар, носивост лифта. Подразумева се 
    да је сваки нови лифт приликом настанка празан, у приземљу и још није извршио никакав рад.

    Класа има два својства за читање: целобројно својство ``Sprat`` и реално својство ``Rad``, 
    помоћу којих се очитавају редом текући спрат (положај лифта) и укупан извршен рад од стављања 
    лифта у погон. Ове вредности се читају из одговарајућих приватних поља.
    
    Од јавних метода, класа има:
    
    - метод ``void Ulaz(uint m)``, који имплементира улазак масе ``m`` у лифт,
    - метод ``void Izlaz(uint m)``, који имплементира излазак масе ``m`` из лифта,
    - метод ``void Komanda(uint noviSprat)``, који имплементира прелазак лифта на задати спрат.

    При имплементацији метода ``Ulaz`` треба водити рачуна о могућем преоптерећењу лифта, а код метода 
    ``Izlaz`` о немогућем захтеву. Ако би се позивом метода добила недозвољена или немогућа 
    (негативна) маса у лифту, метод треба да баци изузетак.
    
    Приликом промене спрата, лифт врши рад који се (само за потребе овог задатка) рачуна по 
    следећој формули: за кретање на горе, новоизвршени рад је једнак производу масе у лифту и 
    броја пређених спратова, а за кретање на доле ова вредност се множи са 0.5.
    
    |
    
    Напишите и кратак програм којим се демонстрира употреба класе (испробавају се све 
    функционалности класе), а затим искористите написану класу да решите следећи задатак:

    Написати програм који учитава податке о коришћењу лифта (уласци у лифт, изласци из лифта, 
    кретање) и на крају исписује извештај о извршеном раду.
    
    
.. reveal:: lift_predlog_resenja
    :showtitle: Могуће решење за класу
    :hidetitle: Сакриј решење

    **Могуће решење за класу:**
    
    .. activecode:: klasa_lift
        :passivecode: true
        :includesrc: src/zadaci/14_lift.cs

