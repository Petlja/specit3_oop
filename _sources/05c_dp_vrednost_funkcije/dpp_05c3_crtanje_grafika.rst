Апликација за цртање графика
============================

У овој апликацији нема ничег новог, већ су само разни, од раније познати, делови склопљени у нову 
целину. Апликација за цртање графика користи библиотеку ``CoordinateConverter``, коју смо користили 
у програму за цртање многоуглова и програму за цртање графика одабраних функција. Оба ова програма 
представљена су заједно са библиотеком ``CoordinateConverter`` када смо говорили о групама 
неповезаних класа.

Апликација из овог примера је веома слична апликацији за цртање графика одабраних функција, у којој 
се функција бира из менија. Методи за обраду догађаја миша (померање, увеличавање и умањивање 
координатног система) су потпуно исти. Метод ``Form1_Paint`` за исцртавање графика је врло сличан, 
јер се заснива на истој идеји. Суштинска разлика је само у начину добијања вредности функције за 
дато :math:`x`. Наиме, пошто се сада бавимо апликацијом која омогућава цртање графика било које 
функције (коју корисник уноси као текст), укључићемо и библиотеку ``Funkcije`` и помоћу ње ћемо да 
генеришемо објекат који израчунава вредности функције задате текстом. 

Тако ће форма поред објекта ``cc`` класе ``CoordinateConverter`` да садржи и референцу ``F`` на 
апстрактну класу ``Function`` из библиотеке ``Funkcije``. Сада разлику у методу ``Form1_Paint`` 
можемо да опишемо и конкретније -- уместо линије: 

.. code-block:: csharp

    float yw = F(xw);

...користимо линију 

.. code-block:: csharp

    float yw = (float)F.Value(xw);

...док је све остало могло да буде и потпуно исто. Мада је сличност две поменуте апликације врло велика, 
ради комплетности дајемо изворни кôд класе ``Form1`` апликације за цртање графика произвољне функције. 

.. reveal:: dugme_ParsiranjeFunkcija_Form1.cs
    :showtitle: Садржај фајла Form1.cs
    :hidetitle: Сакриј садржај фајла Form1.cs

    .. activecode:: ParsiranjeFunkcija_Form1.cs
        :passivecode: true
        :includesrc: src/primeri/ParsiranjeFunkcija/Grafik/Form1.cs
        
.. reveal:: dugme_ParsiranjeFunkcija_Form1.Designer.cs
    :showtitle: Садржај фајла Form1.Designer.cs
    :hidetitle: Сакриј садржај фајла Form1.Designer.cs

    .. activecode:: ParsiranjeFunkcija_Form1.Designer.cs
        :passivecode: true
        :includesrc: src/primeri/ParsiranjeFunkcija/Grafik/Form1.Designer.cs

Да бисмо омогућили кориснику да зада функцију у текстуалном облику, користимо додатну малу класу 
``Prompt``, која приказује једноставан дијалошки прозор за унос текста. У наставку је дат изворни 
кôд и ове класе (фајл ``Prompt.cs``).

Ако желите да испробате апликацију, потребно је да урадите следеће:

- Креирајте нови пројекат типа ``Windows Forms App`` и назовите га ``Grafik``,
- Подесите међузависност пројеката, тј. задајте да овај пројекат зависи од пројеката 
  ``CoordinateConverter``  и ``Funkcije``,
- Прегазите садржај фајлова ``Form1.cs`` и ``Form1.Designer.cs`` датим садржајем,
- Додајте у пројекат нови фајл (десни клик на пројекат у прозору ``Solution Explorer``, ставка 
  ``Add``, а затим  ``New Item`` у искачућем менију), назовите га ``Prompt.cs`` и копирајте у њега 
  кôд класе ``Prompt``, који је дат у наставку.
        
.. reveal:: dugme_ParsiranjeFunkcija_Prompt.cs
    :showtitle: Садржај фајла Prompt.cs
    :hidetitle: Сакриј садржај фајла Prompt.cs

    .. activecode:: ParsiranjeFunkcija_Prompt.cs
        :passivecode: true
        :includesrc: src/primeri/ParsiranjeFunkcija/Grafik/Prompt.cs
