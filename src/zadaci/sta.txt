Robot
    konstruktor(pozicija, orijentacija)
    kretanje napred, okretanje nalevo i nadesno
    
Lift
    konstruktor(nosivost)
    ulaz, izlaz, komanda - odlazak na sprat 
    (racuna rad, pazi na preopterecenje)

Zmijica (dati kao napisanu klasu)
    Ima getere za broj clanaka, i za svaki clanak
    Gore, Dole, Levo, Desno, Rasti

LinFun
    konstruktor (k, n)
    Value
    operator +
    Compose

SSConstFun
    konstruktor (default, izuzeci)
    Value
    operator +
    Compose
    

полином: 
    вредност, + - * /, 
    ако је степен 1 или 2 - онда и корени, 
    
sistem tela (tezi - nedovrsen)
    - unos novog tela
    - korak u simulaciji kretanja (pod uticajem ostalih tela)

-------------------------

http://salapura.com/java/vjezbe/zadaci_SkriptaOOP.pdf

sfera
    - zapremina
    - promena poluprecnika

racunanje sa matricama
    креирање јединичне матрице задате димензије, 
    креирање нула-матрице задате димензије, 
    креирање матрице када су познати њени елементи, 
    учитавање елемената матрице са стандардног улаза,
    одређивање димензије матрице, 
    одређивање транспоноване матрице, 
    одређивање детерминанте матрице, 
    одређивање збира, разлике и производа двеју матрица, 
    као и испис матрице на стандардни излаз у квадратном облику. 

Матрица - сиромашнија имплементација класе Matrica; нема све методе као претходна.
    Обезбедити конструктор, 
    конструктор копије, 
    рекурзиван метод за рачунање детерминанте матрице,
    као и метод за учитавање матрице са стандардног улаза. 
    Написати тест класу.

Релација ?
    да ли је релација рефлексивна, симетрична и транзитивна. 
    Релација је представљена квадратном матрицом. Користити класу Matrica из претходног задатка. 
    У матрици се на позицији [i,j] налази 1, ако су i и j у релацији, иначе 0. Димензија и елементи
    матрице уносе се из датотеке. Исписати одговарајуће поруке на стандардни излаз.
    
10. Многоугао. 
    Написати класу Mnogougao којом се описује многоугао помоћу низа својих темена.
    Теме је представљено објектом класе Tacka. 
    Обезбедити конструктор на основу датог дводимензионалног низа координата темена, као и конструктор на основу датог низа темена многоугла. 
    Написати следеће методе:
        - Метод који враћа низ чији су елементи дужине страница многоугла
        - Методе који рачунају обим и површину многоугла
        - Метод који испитује да ли је многоугао конвексан
        - Метод који испитује да ли је многоугао квадрат
        - Метод који одређује број дијагонала многоугла
        - Метод за добијање String-репрезентације многоугла коју чине координате темена многоугла и дужине страница многоугла
        - Метод за учитавање многоугла из датотеке. У првој линији датотеке је број темена многоугла, а затим у свакој наредној координате појединачних темена.
    Написати и тест-класу где прво треба учитати многоугао из датотеке, потом срачунати обим и
    површину, испитати да ли је многоугао конвексан и, ако јесте, да ли је квадрат. Резултате исписати
    такође у датотеку.

11. Велики бројеви. 
    Написати класу за рад са великим ненегативним целим бројевима.
    Претпоставити да бројеви немају више од 2000 цифара.
    Од операција имплементирати: 
        - унос "великог" броја са тастатуре, 
        - креирање "великог" броја од цифара задатог целог броја, 
        - сабирање "великих" бројева, 
        - множење "великих" бројева, 
        - рачунање факторијела ненегативног целог броја
        - рачунање задатог елемента Фибоначијевог низа.
        - Предефинисати методе compareTo() и equals() наслеђене од класе Object тако да раде на одговарајући начин са "великим" бројевима.
    Написати потом и тест-класу.

12. Животиње – наслеђивање. 
    Написати дефиницију класе Zivotinja. Сваку животињу карактерише њена животињска врста. 
    Из класе Zivotinja извести класу Pas. За пса је познато његово име и раса.
    Ако се приликом креирања пса не наведе његова раса, поставити је на "бернардинац". 
    Написати тест класу.

13. Животиње – полиморфизам. 
    Написати апстрактну класу Zivotinja, при чему сваку животињу карактерише њена врста. 
    Класа треба да садржи метод за оглашавање животиње и метод за оглашавање животиње у љутини, као и метод који описује начин кретања животиње. 
    Дефинисати класе Pas, Riba и Pingvin које наслеђују класу Zivotinja и класу ZlatniRetriver која наслеђује класу Pas.
    Све конкретне врсте животиња карактеришу се својим именом, за пса је позната и његова раса, а за рибу подврста. 

    У тест-класи направити низ животиња који садржи по један примерак сваке животињске врсте, а затим 4 пута 
    случајно изабрати елемент низа, исписати податке о изабраној животињи, као и начине њеног кретања и оглашавања.

14. Животиње – интерфејси. 
    Написати Јава-програм за рад са животињама. Од животињских врста
    треба описати пса, мачку, рибу, жабу, кокошку, делфина и пингвина. Свака животиња има своје име;
    за пса, мачку и кокошку позната је и њихова раса, а за рибу врста. Имплементирати интерфејсе
    Oglasavanje (описује оглашавање животиње, као и оглашавање животиње у љутини) и Kretanje
    (описује начин кретања животиње). Интерфејс Kretanje имплементирати за све наведене животињске
    врсте, а интерфејс Oglasavanje за све осим рибе, делфина и пингвина. Написати потом и тест-класу. У
    тест-класи направити низ животиња који садржи по један примерак сваке животињске врсте, а затим
    5 пута случајно изабрати елемент низа и исписати податке о изабраној животињи, као и начине њеног
    кретања. Уколико животиња има могућност оглашавања, исписати најпре њено уобичајено, а потом и
    оглашавање у љутини.

15. Угњеждене класе. 
    Написати класу MagicniSesir која представља магични шешир. 
    Магични шешир садржи променљив број зечева који су дефинисани класом Zec. Она је угњеждена у класи MagicniSesir.
    Магични шешир се карактерише својим називом и низом зечева који су у њему. Оно што је
    заједничко за све магичне шешире јесте максималан дозвољени број зечева и дозвољена имена
    зечева. Обезбедити начин да се зечеви са истим именом међусобно разликују. Написати конструктор
    и метод за генерисање String-репрезентације магичног шешира, коју чине назив шешира и имена
    зечева који су у њему.
    Сваки зец карактерише се својим именом, које је једно од дозвољених имена и мора бити генерисано
    као јединствено. Обезбедити и метод за генерисање String-репрезентације зеца која садржи његово
    име.
    
16. Повезана листа, Многоугао. 

17. LinkedList, Многоугао. 
    Дефинисати класу Mnogougao са истим својствима као у претходном
    задатку, само уместо класе PovezanaLista< >, користити класу LinkedList< > из пакета java.util. 
    Тесткласа има исту форму као у претходном задатку

18. Lista Osoba - ArrayList. 
    Написати апликацију којом се описује поступак пријављивања особа на конкурс за улогу у филму. 
    Подаци о особама су име и презиме особе и чувају се у листи. 
    За имплементацију листе користити класу java.util.ArrayList. Потребно је реализовати следеће операције: 
    додавање нове особе у листу, 
    провера да ли се дата особа већ налази у листи, 
    листање свих особа у абецедном поретку и 
    смештање листе особа у датотеку "C:\temp\Osobe.bin" приликом завршетка рада. 

    Уколико се програм покреће по први пут, кренути од празнe листе, у супротном, особе ишчитати из датотеке "C:\temp\Osobe.bin".

19. Велики бројеви, ArrayList. 
    Написати класу за рад са великим ненегативним целим бројевима. Бројеви могу бити произвољне дужине.
    Од операција имплементирати: 
        унос "великог" броја са тастатуре, 
        креирање "великог" броја од цифара задатог целог броја, 
        сабирање "великих" бројева, 
        множење "великих" бројева, 
        рачунање факторијела ненегативног целог броја и 
        рачунање задатог елемента Фибоначијевог низа.

    Предефинисати методе compareTo() и equals() наслеђене од класе Object тако да раде на одговарајући начин са "великим" бројевима.
    Написати потом и тест-класу.

20. Именик. 
    Написати Јава-програм за рад са једноставним имеником. 
    Уноси у именику састоје се од имена и презимена особе и њеног телефонског броја. 
    Телефонски број састоји се из два дела: позивног и броја у локалу. Није потребно вршити провере валидности ових бројева. 
    Од операција над имеником реализовати: 
        додавање новог уноса у именик, 
        тражење телефонског броја задате особе,
        листање свих уноса именика у абецедном поретку по презимену и имену особе и 
        смештање именика у фајл "C:\temp\Imenik.bin" приликом завршетка рада. 
        Уколико се програм покреће по први пут, кренути од празног именика, а иначе уносе ишчитати из фајла "C:\temp\Imenik.bin".

21. Шах. 
    Написати конзолну апликацију за играње шаха. 

22. Шах, GUI. 
    Написати аплет за играње шаха. 



1. Први колоквијум 2008, Геометријски објекти.
Написати:
1. класу Tacka којом се представљају тачке у дводимензионој равни. Класа садржи следеће методе:
(a) подразумевани конструктор (тачка се поставља у координатни почетак)
(б) конструктор са датим координатама
(в) приступне методе
(г) метод за одређивање растојања између две тачке
(д) метод за померање тачке дуж x и y осе
(ђ) метод за испис тачке
(е) омогућити креирање новог објекта класе на основу већ постојећег, али независног од њега

2. апстрактну класу GeometrijskiObjekat за рад са геометријским објектима у 2D који се карактеришу својом централном тачком. 
Сваки геометријски објекат има и свој тип. Све чланице класе декларисати као private. Обезбедити следеће методе:
(a) конструктор са датом вредношћу за тип (центар је у координатном почетку)
(б) конструктор на основу задате вредности за тип и задате централне тачке
(в) конструктор на основу задате вредности за тип и задатих координата централне тачке
(г) приступни и мутатор метод за центар
(д) метод за рачунање површине
(ђ) метод за испис геометријског објекта

3. класу Kvadrat која наслеђује класу GeometrijskiObjekat којом се описује квадрат са произвољним положајем у равни. 
Квадрат се још карактерише и једним (било којим) теменом. Обезбедити још и следеће методе:
(а) конструктор са датим теменом
(б) конструктор са датим теменом и центром
(в) метод за одређивање странице квадрата
(г) метод за испис квадрата у формату: Kvadrat: (x1,y1), (x2,y2)
(д) омогућити креирање новог објекта класе на основу већ постојећег, али независног од њега

4. класу Krug која наслеђује класу GeometrijskiObjekat којом се описује круг у равни. Круг се још карактерише и својим полупречником. 
Обезбедити још и следеће методе:
(а) конструктор са датим полупречником
(б) конструктор са датим полупречником и центром
(в) метод за испис круга у формату: Krug: (x1,x2), r
(г) омогућити креирање новог објекта класе на основу већ постојећег, али независног од њега

5. класу PiramidaKupa која симулира геометријско тело које се може понашати као пирамида или
купа, у зависности од основе која може бити квадрат или круг. Објекти ове класе се карактеришу
својом основом и висином. Обезбедити следеће методе:
(а) конструктор на основу дате основе и висине
(б) метод за одређивање запремине оваквог геометријског тела
(в) метод за испис на стандардни излаз у формату: Piramida/Kupa: osnova, visina

6. класу TestGeometrija за тестирање рада програма. Омогућити учитавање дводимензионих
геометријских објеката (квадрата и кругова) са стандардног улаза.
(а) Квадрати се учитавају тако што се унесе ниска kvadrat, а затим се уносе вредности којима се
описује конкретан објекат овог типа.
(б) Кругови се учитавају тако што се унесе ниска krug, а затим се уносе вредности којима се описује
конкретан објекат овог типа.
Најпре се учитава број који представља колико ће дводимензионих објеката бити унешено са улаза.
Објекти се учитавају у горе описаном формату. Учитане објекте смештати у одговарајући низ. Након
тога за сваки учитани објекат креирати пирамиду/купу чија је основа тај објекат, при чему се висина
пирамиде/купе уноси са стандардног улаза. Након тога исписати прво податке за креирану пирамиду/
купу, а потом и одговарајућу запремину.




2. Први колоквијум 2008, Функције
Написати:
1. апстрактну класу Funkcija за рад са функцијама једне променљиве. Класа садржи следеће методе:
(а) метод за одређивање вредности функције у датој тачки (резултат је реалан број)
(б) метод за одређивање извода функције (резултат је функција)
(в) метод за одређивање вредности извода у датој тачки (резултат је реалан број)
(г) метод за испис функције

2. класу Trig којом се описују тригонометријске функције облика a * sinx + b * cosx. Свака функција
из ове класе карактерише се конкретним вредностима за коефицијенте a и b. Обезбедити неопходне
констукторе и дефинисати потребне методе. Формат исписа тригонометријских функција је: Trigonometrijska: a*sinx + b*cosx

3. класу Exp којом се описују експоненцијалне функције облика a * e b*x. Свака функција из ове класе
карактерише се конкретним вредностима за коефицијенте a и b. Обезбедити неопходне констукторе и
дефинисати потребне методе. Формат исписа експоненцијалних функција је: Eksponencijalna: a*e ˆ (b*x)

4. класу TestFunkcija за тестирање рада са функцијама. Омогућити учитавање функција са стандардног улаза.
(а) Тригонометријске функције се учитавају тако што се унесе слово t, а затим се уносе вредности
којима се описује конкретан објекат овог типа.
(б) Експоненцијалне функције се учитавају тако што се унесе слово e, а затим се уносе вредности
којима се описује конкретан објекат овог типа.
Функције се учитавају у горе описаном формату, све док се не унесе слово x као сигнал краја уноса.
Сматрати да је могуће унети податке о највише 30 функција. Функције смештати у одговарајући низ.
Исписати број креираних функција. Са стандардног улаза учитати број који представља тачку у којој
се рачунају вредности функција. Након тога сваку функцију из низа исписати на излаз, затим
исписати њену вредност у учитаној тачки, исписати њен извод, као и вредност извода у учитаној тачки.




3. први колоквијум 2008, Особе. Написати класу Osoba која садржи инстанцне променљиве: 
име, датум рођења и адресу становања (све типа String).
Djak је особа за коју се додатно знају назив школе (типа String), разред који похађа (типа int) и просечна оцена (типа double).
Student је особа за коју се додатно зна име факултета и име смера (типа String), као и година уписа на факултет и година студија на коју је студент тренутно уписан (типа int).
Zaposleni је особа за коју се додатно зна име фирме и име одељења у коме ради (типа String) и месечна плата (типа double).
Обезбедити да се полиморфно извршава метод:
void markica();
који треба да испише боју маркице која одговара објектима класе у којој је метод имплементиран, и
то: "плава маркица" за ђаке, "зелена маркица" за студенте и "црвена маркица" за запослене.
У свакој од класа Djak, Student i Zaposleni имплементирати метод: double prosek();
који у класи Djak рачуна просечну оцену на основу свих креираних објеката класе Djak, у класи
Student рачуна просечно време студирања на основу свих креираних објеката класе Student, а у класи
Zaposleni рачуна просечну месечну плату на основу свих креираних објеката класе Zaposleni.
Поред ових метода, у класама имплементирати и све остале методе неопходне за коректно
извршавање главног програма, као и средство за креирање новог објекта класе идентичног датом
постојећем објекту, али независног од њега.
Написати тест-класу која ради следеће:
- захтева да корисник са стандардног улаза унесе број објеката, а затим
- у петљи очекује да корисник унесе "ђак", "студент" или "запослени"
- након тога податке помоћу којих се креира објекат изабраног типа
- тако учитане објекте потребно је смештати у одговарајућу структуру података
- главни програм, затим, за сваки креирани објекат исписује његову String-репрезентацију, боју
маркице карактеристичну за објекте тог типа, као и просечну вредност срачунату помоћу
одговарајућег метода prosek().




4. Други колоквијум 2008, Домине.
Написати аплет који садржи:
• Два поља за унос два цела броја са одговарајућим лабелама. 
Први број представља број тачака на једној половини домине, а други на другој половини домине. 
Минималан број тачака на једној половини је 0, а максималан 6. Домина може имати исти број тачака на обе половине.
• Лабелу poruka за испис потребних порука.
- Креирати све могуће домине које задовољавају дати услов и сместити их у колекцију која се може реализовати вектором. 
Домине произвољно промешати. Креирање домина и мешање извшити пре креирања компоненти које су део аплета.
- Горња поља служе за уношење података о домини која се бира из колекције. 
ОБАВЕЗНО проверити да ли је домина коректно унешена и у случају неисправног уноса исписати одговарајућу поруку у лабели poruka. 
Бира се тачно 5 домина. Свака домина која се бира из колекције расположивих домина истовремено се из ње уклања. 
ОБАВЕЗНО проверити да ли је домина која се бира већ раније изабрана и у том случају исписати одговарајућу поруку у лабели
poruka. Када се изабере свих 5 домина, онемогућити даљи унос у поља, а лабела poruka треба да
садржи обавештење да је изабран потребан број домина.
• Дугме Izaberi. Једним кликом на дугме бира се одговарајућа домина из колекције. Успешно
бирање домине за последицу има и истовремено креирање и додавање дугмета аплету које као
лабелу има приказ изабране домине. Домине се приказују у облику [broj1 | broj2]. ( погледати метод
validate() у класи java.awt.Container )
- Омогућити да, кад се миш позиционира на неко од изабраних дугмета, на дугмету се испише
укупан број тачака на домини која је на њему приказана и то црвеном бојом. Када се миш
помери са дугмета, дугме добија свој првобитан изглед.
• Дугме UkupanBrojTacaka и поље за испис резултата. Кликом на дугме у пољу се аутоматски
приказује укупан број тачака на свим доминама које су изабране. Онемогућити било какав унос у
дато поље.
- Омогућити да, када се мишем уђе на површину поља, резултат се прикаже црвеном бојом, при
чему је величина фонта увећана за 10 пиксела. Померањем миша са површине поља резултат
добија првобитан изглед.
Поставити величину аплета тако да када се аплет покрене све његове компоненте буду видљиве и распоређене као на датим сликама.
Аплет иницијално треба да буде приказан као на првој слици. Друга слика показује избор домине и додавање дугмета са изабраном домином аплету. 
На последњој слици су приказане све изабране домине и тражени резултат.





5. Други колоквијум 2008, Карте.
Написати аплет који садржи:
- Четири радио дугмета за избор боје карте са лабелама које одговарају могућим бојама (PIK, HERC, KARO, TREF). 
  Дугмета треба да буду приказана оном бојом коју садрже (црна за TREF и PIK, црвена за KARO и HERC). Тачно једно дугме треба да буде селектовано.
- Поље за унос вредности карте са одговарајућом лабелом.
- Лабелу poruka за испис поруке.
- Дугме Izaberi.
- Корисник бира тачно 6 карата, при чему не треба проверавати да ли је нека карта већ изабрана. 
  ОБАВЕЗНО проверити да ли је вредност карте коректно унешена и у случају неисправног уноса у лабели poruka исписати одговарајућу поруку. 
  Карта се бира кликом на дугме Izaberi. За сваку изабрану карту аутоматски се на површини аплета појављује check-box дугме са лабелом облика boja_karte vrednost_karte 
  (на пример TREF 2). Лабела треба да се прикаже у боји изабране карте. Иницијално, check-box дугме које одговара изабраној карти није селектовано.
- Након успешног бирања тачно 6 карата, сваки даљи клик на дугме изабери има за последицу испис поруке у лабели порука да је изабран довољан број карата.
- Четири радио дугмета истог облика као и претходна четири. Тачно једно дугме треба да буде селектовано.
- Дугме Cekiraj.
- Избором неке од боја са радио дугмета и кликом на дугме Cekiraj, селектују се она check-box dugmeta која садрже карту у изабраној боји. 
  Обезбедити да корисник не може кликом на check-box дугме да промени његово стање (селектовано/није селектовано).
  Аплет иницијално треба да буде приказан као на првој слици. Друга слика показује избор карте и приказ check-box дугмета са изабраном картом. 
  На трећој слици су приказане све изабране карте, а на четвртој реакција на клик на дугме Cekiraj

6. други колоквијум 2008, Особе 2 (ГУИ - списак особа, приказивање сортирано по абецеди или годинама, унос, брисање)

7. Колоквијум 2009, Исказне формуле. 
    Класа IskaznaFormula је апстрактна и садржи само два апстрактна метода – vrednost() и toString(). 
    IskaznoSlovo (симбол, вредност)
    Negacija, Konjunkcija, Disjunkcija, Implikacija и Ekvivalencija 


8. Колоквијум 2009, Шах (краљ, ловац, топ)
9. Колоквијум 2009, Шах (краљ, ловац и топ).

10. колоквијум 2009, Нумерологија.

11. колоквијум 2009, Пријављивање испита.

12. колоквијум 2009, MTS. Написати програм за рад са prepaid и postpaid корисницима једног провајдера мобилне телефоније.




13. Испит, јун 2009, Квадратне једначине.
    Написати аплет који представља интерфејс за рад са квадратним једначинама. Аплет треба организовати у целине које садрже:
    1. Три текстуална поља за унос коефицијената квадратне једначине. 
       Дугме Dodaj за додавање учитане квадратне једначине у колекцију и дугме Prikazi за приказ квадратне једначине.
       Дугме Prikazi приказује последњу квадратну једначину смештену у колекцију. Уколико нема једначина у колекцији, ништа се не исписује. 
       Извршити контролу вредности учитаних коефицијената.
    2. Дугмета Izvod и Koreni за рачунање и испис извода одговарајуће квадратне функције и за рачунање и испис корена квадратне једначине. 
       Исписати одговарајућу поруку ако једначина нема реалне корене. Ако једначина има два иста реална корена, исписати само један.
       Формат исписа квадратне једначине: a*x^2 + b*x + c = 0.
       Претпоставити да једначина има вредности различите од нуле за све коефицијенте. Обезбедити и коректан испис извода квадратне једначине.
    3. Текстуална поља за унос вредности R, G и B компоненте боје која ће се користити за испис квадратне једначине, извода, корена и порука.
       За сваку компоненту се задаје њена вредност која припада интервалу [0, 255]. 
       Кликом на дугме Postavi boju поставља се боја за испис на одговарајућу комбинацију датих компоненти. 
       Изабраном бојом обојено је текстуално поље поред дугмета Postavi boju које не може да се едитује.
       У исто текстуално поље исписује се порука уколико вредност неке од компоненти не припада датом опсегу или је унешена вредност која није број.
    4. Дугме Kvadratne jednacine. Кликом на дугме врши се испис свих успешно унешених квадратних једначина у фајл izlaz.txt.
       Формат исписа: сваки ред фајла садржи једну квадратну једначину иза које су наведени њени реални корени, уколико постоје, 
       у супротном је исписана порука да једначина нема реалних корена.
    Пример: 1.0*x^2 -3.0*x + 2.0 = 0 2.0 1.0
    2.0*x^2 + 3.0*x + 4.0 = 0 Jednacina nema realnih korena!
    


    
14. Испит, јун 2009, Трансакције.
Написати апликацију која представља интерфејс за рад са трансакцијама у оквиру једног
корисничког рачуна у банци



15. јун 2009, YAMB. Написати аплет чији графички кориснички интерфејс треба да изгледа као на приказаним сликама.
У горњем делу прозора има 6 дугмади која представљају коцкице за YAMB.
Испод сваког дугмета налази се по један check-box. Ако је он чекиран, то значи да се одговарајућа
коцкица не баца у наредном бацању. Притисак на дугме треба да промени статус одговарајућег checkbox-а (чекиран/није чекиран).
Коцкице се бацају 3 пута (што се симулира притиском на дугме "Баци преостале коцкице"), а редни
број бацања се бележи у једном текстуалном пољу у коме је онемогућен унос корисника.
Након трећег бацања, онемогућити даље догађаје притиском на дугме "Баци преостале коцкице",
проверити да ли је добијена кента, каре, "јамб" или ништа од тога и исписати одговарајућу поруку о
томе у једној лабели на прозору.
Притисак на дугме "Поново", које се налази у доњем делу прозора, треба да доведе аплет у првобитно
стање како би играч могао поново да игра.


16. јун 2009, Награде. Једна радио-станица добила је од спонзора одређени број награда које треба
да подели својим слушаоцима. Количина награда записана је у фајлу "nagrade.txt".
Слушаоци се за награде пријављују mail-ом.
За један mail битно је име и презиме пошиљаоца и да ли је у питању слушалац који се пријавио за
награду, или mail нема везе са доделом награда.


17. УОР. Написати аплет чији графички кориснички интерфејс треба да изгледа као на приказаним сликама.
У горњем делу прозора поставити 2 текстуална поља у која корисник уноси по један декадни цео број из интервала 0-255.
Притиском на дугме "Сабери", ако су у горња поља унете исправне вредности, у прве 2 лабеле 
у доњем делу прозора треба исписати записе унетих бројева у бинарној основи у пољима ширине 8, а
затим је потребно извршити сабирање добијених бројева у систему са основом 2 и утврдити да ли је
дошло до прекорачења (резултат такође представити 8-битним бинарним бројем). Добијени резултат,
као и назнаку појаве прекорачења (карактер '*' испред резултата) исписати у трећој лабели у доњем
делу прозора.
Ако нису унете исправне вредности у горња 2 поља, у лабели предвиђеној за приказ резултата исписати поруку:
"Број мора бити из опсега 0-255".